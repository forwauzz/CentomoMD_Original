AWSTemplateFormatVersion: '2010-09-09'
Description: 'CentomoMD AWS Infrastructure - Medical Documentation Platform'

Parameters:
  Environment:
    Type: String
    Default: 'development'
    AllowedValues: ['development', 'staging', 'production']
    Description: 'Environment name'
  
  ProjectName:
    Type: String
    Default: 'centomomd'
    Description: 'Project name for resource naming'

Resources:
  # S3 Bucket for temporary storage
  TranscriptionBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-transcription-${Environment}-${AWS::AccountId}'
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldFiles
            Status: Enabled
            ExpirationInDays: 1
            NoncurrentVersionExpirationInDays: 1
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: Compliance
          Value: 'HIPAA-PIPEDA-Law25'

  # CloudWatch Log Group
  ApplicationLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/${ProjectName}/${Environment}/application'
      RetentionInDays: 30
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  AuditLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/${ProjectName}/${Environment}/audit'
      RetentionInDays: 2555  # 7 years for compliance
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: Compliance
          Value: 'HIPAA-PIPEDA-Law25'

  # IAM Role for the application
  ApplicationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-${Environment}-application-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      Policies:
        - PolicyName: CentomoMDPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: TranscribeAccess
                Effect: Allow
                Action:
                  - transcribe:StartStreamTranscription
                  - transcribe:StartStreamTranscriptionAsync
                Resource: '*'
                Condition:
                  StringEquals:
                    aws:RequestedRegion: ca-central-1
              - Sid: S3Access
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource:
                  - !Sub '${TranscriptionBucket}'
                  - !Sub '${TranscriptionBucket}/*'
              - Sid: CloudWatchMetrics
                Effect: Allow
                Action:
                  - cloudwatch:PutMetricData
                Resource: '*'
                Condition:
                  StringEquals:
                    aws:RequestedRegion: ca-central-1
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  # CloudTrail for audit logging
  CloudTrail:
    Type: AWS::CloudTrail::Trail
    Properties:
      TrailName: !Sub '${ProjectName}-${Environment}-trail'
      S3BucketName: !Ref TranscriptionBucket
      S3KeyPrefix: 'cloudtrail/'
      IncludeGlobalServiceEvents: true
      IsMultiRegionTrail: false
      EnableLogFileValidation: true
      EventSelectors:
        - ReadWriteType: All
          IncludeManagementEvents: true
          DataResources:
            - Type: AWS::S3::Object
              Values:
                - !Sub '${TranscriptionBucket}/'
            - Type: AWS::S3::Bucket
              Values:
                - !Sub '${TranscriptionBucket}'
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: Compliance
          Value: 'HIPAA-PIPEDA-Law25'

  # CloudWatch Dashboard
  ApplicationDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Sub '${ProjectName}-${Environment}-dashboard'
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "metric",
              "x": 0,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  ["AWS/Transcribe", "StreamingTranscriptionEvents", "Service", "Amazon Transcribe"],
                  [".", "StreamingTranscriptionErrors", ".", "."]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "ca-central-1",
                "title": "Transcription Metrics"
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  ["AWS/S3", "NumberOfObjects", "BucketName", "${TranscriptionBucket}"],
                  [".", "BucketSizeBytes", ".", "."]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "ca-central-1",
                "title": "S3 Storage Metrics"
              }
            }
          ]
        }

Outputs:
  TranscriptionBucketName:
    Description: 'S3 Bucket for transcription storage'
    Value: !Ref TranscriptionBucket
    Export:
      Name: !Sub '${ProjectName}-${Environment}-transcription-bucket'

  ApplicationRoleArn:
    Description: 'IAM Role ARN for the application'
    Value: !GetAtt ApplicationRole.Arn
    Export:
      Name: !Sub '${ProjectName}-${Environment}-application-role'

  CloudTrailName:
    Description: 'CloudTrail name for audit logging'
    Value: !Ref CloudTrail
    Export:
      Name: !Sub '${ProjectName}-${Environment}-cloudtrail'

  DashboardName:
    Description: 'CloudWatch Dashboard name'
    Value: !Ref ApplicationDashboard
    Export:
      Name: !Sub '${ProjectName}-${Environment}-dashboard'
